version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: job-portal-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-jobportal}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - job-portal-network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: job-portal-backend
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      - NODE_ENV=production
      - PORT=4000
      - DB_URL=mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DB:-jobportal}?authSource=admin
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-jwt-secret-key}
      - JWT_EXPIRE=7d
      - COOKIE_EXPIRE=7
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "4000:4000"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    networks:
      - job-portal-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: job-portal-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3000:3000"
    networks:
      - job-portal-network

networks:
  job-portal-network:
    driver: bridge

volumes:
  mongodb_data:
